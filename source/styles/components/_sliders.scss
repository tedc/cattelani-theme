
.swiper-container {
	overflow: hidden;
}

%line_before {
	// &:before {
	// 	content: '';
	// 	height: 2px;
	// 	width: $f;
	// 	position: absolute;
	// 	background-color: $w;
	// 	top: 50%;
	// 	margin-top: -1px;
	// 	transition: $speed transform;
	// 	transform: scaleX(0) translateZ(0);
	// 	transform-origin: right center;
	// 	position: absolute;
	// 	left: 0;
	// }
	&:before, &:after {
		content: '';
		height: 1px;
		background-color: $w;
		top: 50%;
		transform: translate3d(0, -50%, 0) scaleX(0);
		transition: transform $speed;
		position: absolute;
	}
	&:after {
		right: 0;
		transform-origin: left center;
	}
	&:before {
		left: 0;
		transform-origin: right center;
	}
}

%arrows {
	@extend [class^="icon"];
	transition: visibility $speed, opacity $speed;
	cursor: pointer;
	&:before {
		@extend .icon-arrow:before;
		font-size: 8px;
		transition: color $speed, transform $speed;
		display: inline-block;
		transform: translate3d(0,0,0);
		&:hover {
			color: $alternate-color;
		}
	}
	&.swiper-button-disabled {
		opacity: .25;
	}
}

.swiper-button-prev {
	transform: scaleX(-1) translateZ(0);
}

.collections {
	background-color: $dark-color;
	@include full;
	height: 100vh;
	overflow: hidden;
	.admin-bar.logged-in & {
		height: calc(100vh - 32px);
	}
	.swiper-wrapper {
		display: flex;
		@extend %blurry_fix;
	}
	&__cell {
		position: relative;
		display: flex;
		align-items: flex-end;
		overflow: hidden;
		justify-content: center;
		@include grow('md');
		.collections__slider--archive & {
			@include breakpoint($bp, false) {
				width: $f*0.8 !important;
			}
		}
	}
	// &__mask {
	// 	@include full;
	// 	background-color: $dark-color;
	// 	transition: transform $speed;
	// 	z-index: 5;
	// 	transform: scaleX(0) translateZ(0) {
	// 		origin: right center;
	// 	}
	// 	.collections__cell--masking & {
	// 		transform: scaleX(1) translateZ(0);
	// 	}
	// }
	&--slider {
		&-h {
			position: relative;
			.icon-arrow {
				position: absolute;
				bottom: em($p*2, $p/2);
				z-index: 20;
				color: $light-color;
				font-size: $p/2;
				cursor: pointer;
				transition: {
					property: visibility, opacity;
					duration: $speed;
				}
				.ios & {
					@include breakpoint(1050px, false) {
						margin-bottom: 50px;
					}
				}
				&-prev {
					transform: scaleX(-1) translate3d(0, 0, 0);
					left: 10px;
					@include breakpoint(640px) {
						left: em($p, $p/2);
					}
					@include breakpoint() {
						left: em($p*2, $p/2);
					}
				}
				&-next {
					right: 10px;
					@include breakpoint(640px) {
						right: em($p, $p/2);
					}
					@include breakpoint() {
						right: em($p*2, $p/2);
					}
				}
				&.hide {
					opacity: 0;
					visibility: hidden;
				}
				&.inactive {
					opacity: 0.25;
					cursor: auto;
				}
				&:before {
					display: inline-block;
					transform: translate3d(0, 0, 0);
					transition: $speed transform;
				}
				&:not(.inactive):hover:before {
					.desktop & {
						transform: translate3d($p/2, 0, 0);
					}
				}
			}
		}
	}
	&__loader {
		position: absolute;
		transform: translate3d(-50%, 0, 0);
		bottom: em($p*2, $p/2);
		left: 50%;
		max-height: none;
		.swiper-slide__link & {
			bottom: auto;
			top: 50%;
			transform: translate3d(-50%, 0, 0);
		}
		.is-leaving & {
			visibility: visible;
			opacity: 1;
		}	
		.is-leaving .ng-enter & {
			&:before {
				display: none;
			}
		}
	}
	&__spinner {
		&:before, &:after {
			background-color: $w;
		}
	}
	&__title {
		font-family: $alternate-font;
		text-align: center;
		position: relative;
		color: $w;
		padding: 0 em($p, 34px) em($p/2, 34px);
		transition: transform $speed, opacity $speed;
		opacity: 0;
		display: block;
		backface-visibility: hidden;
		perspective: 1000px;
		&:after {
			width: 1px;
			background-color: $lighter-color;
			height: em($p*3.1 - 5px, 34px);
			top: $f;
			left: 50%;
			content: '';
			position: absolute;
			transition: transform $speed*0.75;
			transform-origin: center bottom;
			transform: scaleY(0) translateZ(0);
			.ios & {
				@include breakpoint(1050px, false) {
					height: calc(#{em($p*3.1 - 5px, 34px)} + 50px);
				}
			}
		}
		.collections__cell:hover &, .handheld & {
			opacity: 1;
			&:after {
				transform: scaleY(1) translateZ(0);
			}
		}
		.desktop.is-anim & {
			opacity: 0;
			transform: translate3d(0, $p*2, 0);
		}
		.handheld.is-anim & {
			opacity: 0;
		}
		.ios & {
			@include breakpoint(1050px, false) {
				padding: 0 em($p, 34px) calc(#{em($p/2, 34px)} + 50px);
			}
		}
		//@extend %line_before;
		span {
			position: relative;
			@extend %line_before;
			// display: inline-block;
			// transform: translate3d(0, $f*-1, 0);
			// transition: transform $speed;
			// .collections__cell:hover & {
			// 	transform: translate3d(0, 0%, 0);			
			// }
			// .collections__cell--current &, .collections__cell--current:hover & {
			// 	transform: translate3d(0, $f*-1, 0);			
			// }
			padding: {
				left: em($p*1.5, 34px);
				right: em($p*1.5, 34px);
			}
			&:before, &:after {
				width: em($p, 34px);
			}
		}
		&:hover {
			span {
				&:before {
					transform: translate3d(0, -50%, 0) scaleX(1);
					transform-origin: left center;
				}
				&:after {
					transform: translate3d(0, -50%, 0) scaleX(1);
					transform-origin: right center;
				}
			}
		}

	}
	&__link {
		@include full;
		z-index: 1;
	}
	&__slider {
		@include full;
		overflow: hidden;
		&--home {
			.swiper-wrapper {
				transition-timing-function: ceaser($easeOutQuad);
				.swiper-slide {
					width: $f;
					flex: 0 0 auto;
					@extend %blurry_fix;
				}
			}
			a {
				position: absolute;
				top: em($p*4);
				left: 0;
				right: 0;
				bottom: 0;
			}
		}
		&--archive {
			height: 100vh;
			display: flex;
			.logged-in.admin-bar & {
				height: calc(100vh - 32px);
			}
			.scroll-content {
				display: flex;
				height: 100vh;
				width: $f;
				.logged-in.admin-bar & {
					height: calc(100vh - 32px);
				}
			}		
		}
		.swiper-container {
			@include full;
		}
		.swiper-wrapper {
			@include full;
			.swiper-slide {
				position: relative;
				flex: 0 0 auto;
				@include cover;
			}
		}
		&--slides {
			.swiper-slide {
				display: flex;
				align-items: flex-end;
				justify-content: center;
				@include grow('md');
				&__title {
					font-family: $alternate-font;
					text-align: center;
					position: relative;
					color: $w;
					padding: 0 em($p, 34px);
					backface-visibility: hidden;
					display: block;
					@extend %line_before;
				}
				&__link {
					@include full;
					z-index: 1;
					display: none;
				}
				&-active {
					.swiper-slide__link {
						display: inherit;
					}
					&:hover {
						.swiper-slide__title {
							&:before {
								transform-origin: left center;
								transform: scaleX(1) translateZ(0);
							}

						}
					}
				}
			}
			.swiper-button-prev, .swiper-button-next {
				@extend %arrows;
				&:before {
					font-size: $p/2;
					color: $light-color;
				}
				&:hover:before {
					transform: translate3d($p/2, 0, 0);
				}
				margin-bottom: em($p/2);
				position: absolute;
				bottom: 0;
				padding: {
                    top: em($p*2);
                    bottom: em($p*2);
                }	
			}
			.swiper-button-prev {
				left: 10px;
				@include breakpoint(640px) {
					left: em($p);
				}
				@include breakpoint() {
					left: em($p);
				}
				&:hover:before {
					.desktop & {
						transform: translate3d($p/2, 0, 0);
					}
				}
			}
			.swiper-button-next {
				right: 10px;
				@include breakpoint(640px) {
					right: em($p);
				}
				@include breakpoint() {
					right: em($p);
				}
			}
		}
	}
	&__nav {
		position: absolute;
		bottom: 0;
		.ios & {
			@include breakpoint(1050px, false) {
				bottom: 50px;
			}
		}
		width: $f;
		left: 0;
		display: flex;
		align-items: center;
		transform: translate3d(0, #{em($p)}, 0);
		transition: {
			property: visibility, opacity, transform;
			duration: $speed;
			delay: $speed/2;
		}
		visibility: hidden;
		opacity: 0;
		@include grow('md');
		&--active {
			visibility: visible;
			transform: translate3d(0, 0, 0);
			opacity: 1;
		}
		.swiper-wrapper {
			padding-top: em($p*3);
		}
		.swiper-slide {
			flex: 0 0 auto;
			cursor: pointer;
			width: $f;
			display: flex;
			align-items: center;
			position: relative;
			text-align: center;
			padding: 0 em($p);
			&:before, &:after {
				height: 1px;
				top: 50%;
				position: absolute;
				width: calc(50% - 25px);
				content: '';
				background-color: transparentize($main-color, .7);
				transition: {
					property: visbility, opacity, margin-bottom;
					duration: $speed;
				}
			}
			&:before {
				left: 0;
			}
			&:after {
				right: 0;
			}
			@include breakpoint() {
				width: auto;
				min-width: $f/5;
			}
			&__link {
				visibility: hidden;
				opacity: 0;
				position: relative;
				margin: 0 auto;
				padding: 0 em($p*1.5);
				transform: translate3d(0, $f, 0);
				transition: {
					property: visbility, opacity, transform;
					duration: $speed;
				}
				span {
					font-size: em(34px);
					color: $w;
					font-family: $alternate-font;
					position: relative;
					transition: opacity $speed;
					display: inline-block;
					.is-leaving & {
						opacity: 0;
					}
				}
				@extend %line_before;
				&:before, &:after {
					width: em($p);
				}
				&:hover {
					// &:before {
					// 	transform-origin: left center;
					// 	transform: scaleX(1) translateZ(0);
					// }
					&:before {
						transform: translate3d(0, -50%, 0) scaleX(1);
						transform-origin: left center;
					}
					&:after {
						transform: translate3d(0, -50%, 0) scaleX(1);
						transform-origin: right center;
					}
				}
				.is-leaving & {
					&:before {
						transition: none !important;
						animation: loading $speed*4 infinite;
					}
				}
				.is-leaving .ng-enter & {
					&:before {
						display: none;
					}
				}
			}
			&__name {
				position: absolute;
				bottom: $f;
				opacity: 0;
				visibility: hidden;
				transition: {
					property: visbility, opacity, margin-bottom;
					duration: $speed*1.5;
				}
				font-size: em(18px);
				font-family: $alternate-font;
				color: $light-color;
				transform: translate3d(-50%, 0, 0);
				left: $f/2;
				min-width: em($p*5, 18px);
			}
			&__item {
				position: absolute;
				width: $p;
				height: $p;
				transform: translate3d(-50%, -50%, 0);
				top: 50%;
				left: 50%;
				cursor: pointer;
				transition: {
					property: visbility, opacity, margin-bottom;
					duration: $speed*1.5;
				}
				&:before {
					@include full;
					content: '';
					border-radius: $p;
					border: 1px solid $light-color;
					transform: translateZ(0) scale(0);
					transition: transform $speed*1.5;
				}
				&:after {
					position: absolute;
					content: '';
					width: 5px;
					height: 5px;
					left: 50%;
					top: 50%;
					transform: translate3d(-50%, -50%, 0);
					border-radius: $p;
					background-color: transparentize($light-color, .5);
				}
				&:hover {
					.swiper-slide__name {
						opacity: 1;
						visibility: visible;
						margin-bottom: $p/2;
					}
					&:before {
						transform: translateZ(0) scale(1);
					}
				}
			}
			&-active {
				&:before, &:after, .swiper-slide__item {
					opacity: 0;
					visibility: hidden;
				}
				.swiper-slide__link {
					opacity: 1;
					visibility: visible;
					transform: translate3d(0, 0, 0);
				}
			}
		}
		.icon-arrow {
			color: $light-color;
			font-size: $p/2;
			cursor: pointer;
			transition: {
				property: visibility, opacity;
				duration: $speed;
			}				
			&.swiper-button-disabled {
				opacity: .25;
			}
			&:before {
				display: inline-block;
				transition: transform $speed;
				transform: translate3d(0,0,0);
			}
			&:not(.swiper-button-disabled):hover:before {
				.desktop & {
					transform: translate3d($p/2, 0, 0);
				}
			}
			&-prev {
				transform: scaleX(-1) translate3d(0, 0, 0);
				&:hover:before {
					.desktop & {
						transform: translate3d($p/2, 0, 0);
					}
				}
			}
		}
	}
	&__container {	
		flex: 2;
		overflow: hidden;
		margin-top: em($p*-3);
	}
}

.full-slider, .container__gallery {
	.swiper-container {
		width: $f;
		margin: 0 auto;
		position: relative;
		// display: flex;
		// justify-content: center;
		// flex-wrap: wrap;
		// &:before {
		// 	flex: 0 0 auto;
		// 	content: '';
		// 	display: block;
		// 	width: $f;
		// 	//padding-top: calc(100vh - #{em($p*7)});
		// 	height: calc(100vh - #{em($p*7)});
		// 	max-height: em(600px);
		// }
	}
	&--lampade {
		.swiper-container {
			@include breakpoint() {
				width: 88%;
				margin: 0 auto;

			}
			.swiper-slide {
				background-size: cover;
			}
		}
	}
	.swiper-button-prev, .swiper-button-next {
		@extend %arrows;
		position: absolute;
		top: 50%;
		display: flex;
		align-items: center;
		margin-top: ($p/4) * -1;
		&:before {
			font-size: 8px;
			color: $dark-color !important;
		}
		z-index: 200;
		transition: background-color $speed;
		background-color: transparentize($w, .5);
		width: $p*2;
		height: $p*2;
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: $p*2;
		&:hover {
			background-color: transparentize($w, .25);
		}
		// transform: translate3d(0, -50%, 0);
	}
	.swiper-button-prev {
		// order: 0;
		// margin-right: em(90px);
		left: 10px;
		@include breakpoint(640px) {
			left: em($p);	
		}
		@include breakpoint() {
			left: em($p*2);	
		}
		// &:hover:before {
		// 	.desktop & {
		// 		transform: translate3d($p/2, 0, 0);
		// 	}
		// }
	}
	.swiper-pagination {
		order: 1;
		margin: 0 em(90px);
		display: none;
		&-bullet {
			cursor: pointer;
			display: inline-block;
			width: 8px;
			height: 8px;
			margin: 0 $p/2;
			border-radius: 8px;
			transition: background-color $speed;
			background-color: #dcddde;
			&-active {
				background-color: $main-color;
			}
		}
		@include breakpoint() {
			display: block;
		}
	}
	.swiper-button-next {
		// order: 2;
		// margin-left: em(90px);
		right: 10px;
		@include breakpoint(640px) {
			right: em($p);	
		}
		@include breakpoint() {
			right: em($p*2);	
		}
	}
	.swiper-wrapper {
		overflow: hidden;
		display: flex;
		// position: absolute;
		// top: 0;
		// left: 0;
		// right: 0;
		// height: calc(100vh - #{em($p*8)});
		// max-height: em(600px - ($p*2));
	}
	.swiper-slide {
		flex: 0 0 auto;	
		line-height: 0;
		width: $f !important;
		display: flex;
		text-align: center;
		img {
			visibility: hidden;
			width: $f;
			display: block;
		}
		&__figure {
			// display: inline-block;
			// max-width: $f;
			width: $f;
			@include cover($size : contain);
			height: 75vw;
			//max-height: em(600px - ($p*2));
			img {
				position: absolute;
				top: 0;
				left: 0;
			}
			@include breakpoint() {
				height: calc(100vh - #{em($p*8)});
			}
		}
	}
	&__pagination {
		display: flex;
		justify-content: center;
		align-items: center;
		@include grow('lg');
	}
	.icon-arrow {
		font-size: 8px;
		color: $main-color;
		margin-left: 90px;
		transition: color $speed;
		&:hover {
			color: $alternate-color;
		}
		&.prev {
			transform: translateZ(0) scaleX(-1);
			margin-right: 90px;
			margin-left: 0px;
		}
	}
	&__dot {
		width: 8px;
		height: 8px;
		margin: 0 $p/2;
		border-radius: 8px;
		transition: background-color $speed;
		background-color: #dcddde;
		&--active {
			background-color: $main-color;
		}
	}
	[class*="-gray"] + & {
		position: relative;
		&:before {
			content: '';
			height: em($p*8);
			background-color: $lighter-color;
			width: $f;
			left: 0;
			top: 0;
			position: absolute;
			z-index: 0;
		}
	}
}

.full-slider {
	.swiper-wrapper {
		.desktop & {
			&:before, &:after {
				width: 50%;
				height: $f;
				position: absolute;
				content: '';
				transition: height $speed*2.25;
				background-color: $w;
				z-index: 5000;
			}
			&:before {
				left: 0;
				bottom: 0;
			}
			&:after {
				left: 50%;
				top: 0;
			}
		}
	}
	[class*="-gray"] + & {
		.swiper-wrapper {
			.desktop & {
				&:after {
					background-image: linear-gradient(to bottom, $lighter-color 0, $lighter-color em($p*8), transparentize($w, 1) em($p*8), transparentize($w, 1) 100%);
				}
				&:before {
					background-image: linear-gradient(0deg, transparentize($w, 1) 0, transparentize($w, 1) calc(75vw - #{em($p*8)}), $lighter-color calc(75vw - #{em($p*8)}), $lighter-color 100%);
				}
				@include breakpoint() {
					&:before {
						background-image: linear-gradient(0deg, transparentize($w, 1) 0, transparentize($w, 1) calc(100vh - #{em($p*16)}), $lighter-color calc(100vh - #{em($p*16)}), $lighter-color 100%);
					}
				}
			}
		}
	}
	&--active {
		.swiper-wrapper {
			.desktop & {
				&:before, &:after {
					height: 0%;
				}
			}
		}
	}
}

@keyframes loading {
	0%  {
		transform-origin: left center;
		transform: scaleX(0) translateZ(0);
	}
	49% {
		transform-origin: left center;
		transform: scaleX(1) translateZ(0);
	}
	51%  {
		transform-origin: right center;
		transform: scaleX(1) translateZ(0);
	}
	99%  {
		transform-origin: right center;
		transform: scaleX(0) translateZ(0);
	}
	100%  {
		transform-origin: left center;
		transform: scaleX(0) translateZ(0);
	}
}